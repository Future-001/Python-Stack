"""
========================================= 昨日回顾 =========================================
类的种类：
        新式类： python3全部是新式类，python2中继承了object类的是新式类
        经典类： python2 中不继承object的是经典类
继承的顺序：
        单继承： 全部都是深度优先
        多继承：
                新式类： 广度优先  （记住特殊的广度优先，C3算法 类名.mro()   )
                经典类： 深度优先
普通类与抽象类：
        普通类
        抽象类： 为了规范子类必须实现和父类的同名方法
                方法1：  定义一个父类，然后采用所有子类都继承父类，并实现和父类方法相同的的同名方法，
                        主动抛异常raise，
                方法2：   采用模块的方法
                        from abc import ABCMeta,abstractmethod
                        在父类中实现  (metaclass=ABCMeta)
                                    @abstractmethod
归一化设计： 在实现了抽象类的基础之上，取出普通类中的相同功能的方法，通过 设计一个统一的一个接口函数，
            直接对这些类进行功能的调用。
多态：
        什么是多态？  一个类表现出来的多种形态，实际上是通过继承来完成的
                    主要指的是一个子类的对象其实也是父类类型的。
        java中的多态： 一定要指定数据的类型。 数据的类型来自同一个父类，例如我们支付的例子。数据类型直接指定 payment
        python中的多态： 处处是多态

鸭子类型：
        我们说一个对象是某某类，通常有两种方法:
                1. 通过继承从而说明是某某类
                2. 不通过继承，判定是不是某某类，反而一般来说通过他们都拥有某种方法从而说明他们是某某类的
                    只要这个类满足了某些类型的特征，我们就说他长得像这个类，就是这个类的鸭子类型。
                例如：  都拥有  __iter__  说明他们是可迭代的， __enter__
                       主要是看他们长得像，什么算长得像呢？ 内部都拥有  __xx__ 这种方法。

"""